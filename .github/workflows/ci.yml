name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

jobs:
  build-docker-image:
    # skip for forked PRs (can't push to ghcr)
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check if Docker rebuild is necessary
        id: changed
        uses: dorny/paths-filter@v3
        with:
          filters: |
            image:
              - 'Dockerfile.arm-gnu'
              - '.github/workflows/ci.yml'

      - name: Login to ghcr
        uses: docker/login-action@v3
        if: steps.changed.outputs.image == 'true'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up buildx
        uses: docker/setup-buildx-action@v3
        if: steps.changed.outputs.image == 'true'

      - name: Build and push
        uses: docker/build-push-action@v6
        if: steps.changed.outputs.image == 'true'
        with:
          context: .
          file: ./Dockerfile.arm-gnu
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/arm-gnu:13.3
            ghcr.io/${{ github.repository }}/arm-gnu:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

  test-build:
    needs: build-docker-image
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}/arm-gnu:13.3

    strategy:
      fail-fast: false
      matrix:
        dir: [ "src/tests/serial" ]
        preset: [ Debug, Release ]

    steps:
      - name: Checkout repo and submodules
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set parallelism
        run: echo "CMAKE_BUILD_PARALLEL_LEVEL=$(nproc)" >> $GITHUB_ENV

      - name: Build ${{ matrix.dir }} (${{ matrix.preset }})
        run: ./scripts/build.sh --dir ${{ matrix.dir }} --preset ${{ matrix.preset }}

